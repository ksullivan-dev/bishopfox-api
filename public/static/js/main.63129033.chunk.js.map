{"version":3,"sources":["stylesheets/variables.scss","stylesheets/index.scss","utilities/capitalize.js","utilities/callMeDanger.js","utilities/jsonToFormData.js","utilities/readCookie.js","utilities/underscorer.js","utilities/apiUtils/requester.js","utilities/apiUtils/afterSubmit.js","utilities/apiUtils/index.js","utilities/apiUtils/urls.js","utilities/apiUtils/api_url.js","shared/loading.js","shared/titler.js","components/scans/recentScans.js","shared/input.js","components/scans/importScan.js","components/scans/emptyScan.js","components/scans/scans.js","components/scans/deleteScan.js","shared/truncate.js","shared/flex.js","components/hosts/hostDetails.js","components/hosts/port.js","components/hosts/hosts.js","components/notFound.js","components/scans/scan.js","components/main.js","index.js"],"names":["module","exports","capitalize","string","charAt","toUpperCase","toLowerCase","slice","callMeDanger","template","el","React","createElement","dangerouslySetInnerHTML","__html","jsonToFormData","data","formData","FormData","buildFormData","parentKey","Date","File","value","append","Object","keys","forEach","key","readCookie","name","nameEQ","ca","document","cookie","split","i","length","c","substring","indexOf","underscorer","trim","replace","requester","a","url","body","headers","method","noContentType","decodeURIComponent","JSON","stringify","fetch","response","ok","json","responseJson","error","Error","statusText","status","console","log","afterSubmit","cb","eb","setTimeout","redirect","redirect_url","window","location","href","API_SCANS","scans","Loading","PropTypes","bool","object","node","loading","loadingProps","children","container","className","Dimmer","inverted","active","Loader","Titler","number","oneOfType","title","linebreak","bold","RecentScans","history","useHistory","onClick","e","obj","push","Card","Group","map","scan","data-testid","data-scanid","id","Content","Header","content","moment","start_time","format","Meta","hosts_up","hosts_down","toString","Input","func","array","props","label","placeholder","onChange","inputLabel","labelPosition","autoComplete","fluid","inputType","options","dataArray","allowLP","accept","rest","customInput","undefined","data-lpignore","Form","Field","htmlFor","input","TextArea","Select","selectOnBlur","selectOnNavigation","onFocus","target","setAttribute","Checkbox","item","Radio","checked","type","Label","as","icon","ImportScan","updateLoading","callback","errback","handleSubmit","text","form_data","handleFile","files","imported_file","EmptyScans","iconStyles","color","styles","darkgray","Icon","size","style","maxWidth","marginLeft","marginRight","fontSize","Scans","useState","updateScans","loaded","updateLoaded","useEffect","fetchData","result","timer","clearTimeout","noScans","hasScans","Segment","secondary","textAlign","padded","DeleteScan","open","setOpen","deleteScan","Button","negative","Confirm","header","onCancel","onConfirm","confirmButton","primary","Truncate","Flex","transformBoolsToStrings","reduce","bools","flexChildren","spacing","Children","child","kidClasses","flex","flexString","padding","cloneElement","buildFlexClasses","classes","join","this","filterProps","margin","modified","Component","formattedDate","details","formatter","parse","Array","isArray","HostDetails","host","Port","port","state","Hosts","hosts","all","hostIds","updateHosts","prev","includes","filter","compact","Accordion","hostnames","parsedHostname","hostnameDisplay","ip4_addr","Title","data-hostid","Description","Divider","wrap","ports","minWidth","NotFound","Scan","useParams","updateScan","to","Main","path","exact","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.63129033.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"darkgreen\":\"#17571c\",\"lightgreen\":\"#45a44d\",\"brown\":\"#6c3f32\",\"offwhite\":\"#fafafa\",\"text\":\"#242424\",\"lightgray\":\"#f3eff7\",\"darkgray\":\"#a2a2a2\",\"primary\":\"#59327e\",\"darkprimary\":\"#3f2459\",\"secondary\":\"#3f2459\",\"darkbkg\":\"#242424\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"darkgreen\":\"#17571c\",\"lightgreen\":\"#45a44d\",\"brown\":\"#6c3f32\",\"offwhite\":\"#fafafa\",\"text\":\"#242424\",\"lightgray\":\"#f3eff7\",\"darkgray\":\"#a2a2a2\",\"primary\":\"#59327e\",\"darkprimary\":\"#3f2459\",\"secondary\":\"#3f2459\",\"darkbkg\":\"#242424\"};","const capitalize = string =>\n  string.charAt(0).toUpperCase() + string.toLowerCase().slice(1);\n\nexport default capitalize;\n","import React from 'react';\n\nconst callMeDanger = (template, el = 'span') =>\n  React.createElement(el, { dangerouslySetInnerHTML: { __html: template } });\n\nexport default callMeDanger;\n","const buildFormData = (formData, data, parentKey) => {\n  if (\n    data &&\n    typeof data === 'object' &&\n    !(data instanceof Date) &&\n    !(data instanceof File)\n  ) {\n    Object.keys(data).forEach(key => {\n      buildFormData(\n        formData,\n        data[key],\n        parentKey ? `${parentKey}[${key}]` : key\n      );\n    });\n  } else {\n    const value = data == null ? '' : data;\n    formData.append(parentKey, value);\n  }\n};\n\nconst jsonToFormData = data => {\n  const formData = new FormData();\n  buildFormData(formData, data);\n  return formData;\n};\n\nexport default jsonToFormData;\n","const readCookie = name => {\n  const nameEQ = `${name}=`;\n  const ca = document.cookie.split(';');\n  for (let i = 0; i < ca.length; i += 1) {\n    let c = ca[i];\n    while (c.charAt(0) === ' ') c = c.substring(1, c.length);\n    if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);\n  }\n  return null;\n};\n\nexport default readCookie;\n","const underscorer = string =>\n  string\n    .trim()\n    .toLowerCase()\n    .replace(/\\s/g, '_');\n\nexport default underscorer;\n","/* eslint-disable no-param-reassign */\nimport { readCookie } from 'utilities';\n\nconst requester = async ({\n  url,\n  body,\n  headers,\n  method = 'POST',\n  noContentType\n}) => {\n  const cookie = decodeURIComponent(readCookie('X-CSRF-Token'));\n  headers = {\n    'Content-Type': 'application/json',\n    'X-CSRF-Token': cookie,\n    ...headers\n  };\n  if (noContentType) {\n    delete headers['Content-Type'];\n  }\n  if (headers['Content-Type'] === 'application/json') {\n    body = JSON.stringify(body);\n  }\n  try {\n    const response = await fetch(url, {\n      method,\n      body,\n      headers\n    });\n    if (response.ok) {\n      const responseJson = await response.json();\n      return responseJson;\n    }\n    const error = new Error(response.statusText || response.status);\n    error.response = await response.json();\n    throw error;\n  } catch (e) {\n    console.log(e.response);\n    return e;\n  }\n};\n\nexport default requester;\n","const afterSubmit = (response, cb, eb) => {\n  setTimeout(async () => {\n    if (response instanceof Error) {\n      eb(response);\n    } else if (response.redirect) {\n      window.location.href = await response.redirect_url;\n    } else {\n      cb(response);\n    }\n  }, 400);\n};\n\nexport default afterSubmit;\n","import requester from './requester';\nimport afterSubmit from './afterSubmit';\nimport mockFetchPromise from './mockFetchPromise';\nimport API_URL from './api_url';\nimport urls from './urls';\n\nconst API_SCANS = urls.scans;\n\nexport { requester, API_URL, afterSubmit, mockFetchPromise, API_SCANS };\n","import API_URL from './api_url';\n\nconst urls = {\n  scans: `${API_URL}/scans`\n};\n\nexport default urls;\n","export default 'http://localhost:3000/api/v1';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dimmer, Loader } from 'semantic-ui-react';\n\nconst Loading = ({\n  loading = true,\n  loadingProps = {},\n  children,\n  container = true\n}) => {\n  let className = container ? 'loader-container' : '';\n  className += container && loading ? '--active' : '';\n  return (\n    <div className={className}>\n      <Dimmer inverted active={loading}>\n        <Loader {...loadingProps} />\n      </Dimmer>\n      {children}\n    </div>\n  );\n};\n\nconst { bool, object, node } = PropTypes;\nLoading.propTypes = {\n  loading: bool,\n  loadingProps: object,\n  children: node,\n  container: bool\n};\n\nexport default Loading;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { callMeDanger } from 'utilities';\n\nconst Titler = ({ title, value, linebreak, bold }) => {\n  if (!value) return null;\n  return (\n    <>\n      {bold && callMeDanger(`<strong>${title}</strong>: ${value}`)}\n      {!bold && `${title}: ${value}`}\n      {linebreak && <br />}\n    </>\n  );\n};\n\nconst { string, bool, number, oneOfType } = PropTypes;\nTitler.propTypes = {\n  title: string,\n  value: oneOfType([string, number]),\n  linebreak: bool,\n  bold: bool\n};\n\nexport default Titler;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { useHistory } from 'react-router-dom';\nimport { Card } from 'semantic-ui-react';\n\nimport Titler from 'shared/titler';\n\nconst RecentScans = ({ scans }) => {\n  const history = useHistory();\n\n  const onClick = (e, obj) => history.push(`/scans/${obj['data-scanid']}`);\n\n  return (\n    <Card.Group>\n      {scans.map(scan => (\n        <Card\n          onClick={onClick}\n          data-testid=\"scans\"\n          data-scanid={scan.id}\n          key={scan.id}\n        >\n          <Card.Content>\n            <Card.Header\n              content={moment(scan.start_time * 1000).format('MMM D, YYYY')}\n            />\n            <Card.Meta>\n              <Titler\n                title=\"Hosts Scanned\"\n                value={scan.hosts_up + scan.hosts_down}\n                linebreak\n                bold\n              />\n              <Titler\n                title=\"Hosts Up\"\n                value={scan.hosts_up.toString()}\n                linebreak\n              />\n              <Titler\n                title=\"Hosts Down\"\n                value={scan.hosts_down.toString()}\n                linebreak\n              />\n            </Card.Meta>\n          </Card.Content>\n        </Card>\n      ))}\n    </Card.Group>\n  );\n};\n\nRecentScans.propTypes = {\n  scans: PropTypes.array\n};\n\nexport default RecentScans;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Label, Input as SUInput } from 'semantic-ui-react';\n\nimport { underscorer } from 'utilities';\n\nconst Input = props => {\n  const {\n    label,\n    placeholder = label,\n    name = underscorer(label),\n    onChange,\n    inputLabel,\n    labelPosition = 'left',\n    autoComplete = name,\n    fluid = true,\n    inputType = 'input',\n    options,\n    dataArray,\n    id,\n    allowLP,\n    accept,\n    ...rest\n  } = props;\n  const customInput = allowLP ? undefined : <input data-lpignore=\"true\" />;\n  const selectFocus = e => e.target.setAttribute('autocomplete', name);\n  return (\n    <>\n      {inputType === 'input' && (\n        <Form.Field>\n          <label htmlFor={name}>{label}</label>\n          <SUInput\n            {...rest}\n            label={inputLabel}\n            input={customInput}\n            placeholder={placeholder}\n            name={name}\n            onChange={onChange}\n            labelPosition={labelPosition}\n            autoComplete={autoComplete}\n            fluid={fluid}\n          />\n        </Form.Field>\n      )}\n\n      {inputType === 'textarea' && (\n        <Form.TextArea\n          {...rest}\n          label={label}\n          placeholder={placeholder}\n          name={name}\n          onChange={onChange}\n        />\n      )}\n\n      {inputType === 'select' && (\n        <Form.Select\n          selectOnBlur={false}\n          selectOnNavigation={false}\n          {...rest}\n          placeholder={placeholder}\n          label={label}\n          name={name}\n          onChange={onChange}\n          options={options}\n          fluid={fluid}\n          onFocus={selectFocus}\n        />\n      )}\n\n      {inputType === 'checkbox' && (\n        <Form.Checkbox\n          {...rest}\n          label={label}\n          name={name}\n          onChange={onChange}\n        />\n      )}\n\n      {inputType === 'radio' &&\n        dataArray.map(item => (\n          <Form.Radio\n            {...rest}\n            key={item.label}\n            label={item.label}\n            name={name}\n            value={item.value}\n            checked={item.checked}\n            onChange={onChange}\n          />\n        ))}\n      {inputType === 'file' && (\n        <>\n          <Form.Input\n            {...rest}\n            type=\"file\"\n            onChange={onChange}\n            className=\"input-file\"\n            id={id}\n            label=\"\"\n            name={name}\n            input={<input accept={accept} />}\n          />\n          <Label\n            htmlFor={id}\n            className=\"ui primary button\"\n            as=\"label\"\n            content={label}\n            icon=\"plus\"\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nconst { string, func, bool, array, oneOfType, object } = PropTypes;\nInput.propTypes = {\n  label: oneOfType([string, object]).isRequired,\n  inputLabel: string,\n  placeholder: string,\n  name: string,\n  onChange: func,\n  labelPosition: string,\n  autoComplete: string,\n  fluid: bool,\n  options: array,\n  inputType: string,\n  dataArray: array,\n  allowLP: bool,\n  id: string,\n  accept: string\n};\n\nexport default Input;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form } from 'semantic-ui-react';\n\nimport { jsonToFormData } from 'utilities';\nimport { requester, afterSubmit, API_SCANS } from 'utilities/apiUtils';\n\nimport Input from 'shared/input';\n\nconst ImportScan = ({ updateLoading }) => {\n  const callback = () => updateLoading({ status: false });\n  const errback = () => updateLoading({ status: false });\n  const handleSubmit = async formData => {\n    updateLoading({ status: true, text: 'Processing Scan...' });\n    const form_data = jsonToFormData(formData);\n    const url = API_SCANS;\n    const response = await requester({\n      url,\n      body: form_data,\n      noContentType: true\n    });\n\n    afterSubmit(response, callback, errback);\n  };\n\n  const handleFile = async e => {\n    const { files } = e.target;\n    if (files.length > 0) {\n      handleSubmit({ imported_file: files[0] });\n    }\n  };\n\n  return (\n    <Form>\n      <Input\n        inputType=\"file\"\n        name=\"importScan\"\n        label=\"Import Scan\"\n        onChange={handleFile}\n        id=\"import-scan\"\n        accept=\".xml\"\n      />\n    </Form>\n  );\n};\n\nconst { func } = PropTypes;\nImportScan.propTypes = {\n  updateLoading: func\n};\n\nexport default ImportScan;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Header, Icon } from 'semantic-ui-react';\n\nimport styles from 'stylesheets/variables.scss';\n\nimport { callMeDanger } from 'utilities';\n\nconst EmptyScans = ({ children }) => {\n  const paraStyles = {\n    maxWidth: 400,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    fontSize: 18\n  };\n  const iconStyles = { color: styles.darkgray };\n  return (\n    <>\n      <Icon name=\"file alternate\" size=\"huge\" style={iconStyles} />\n      <Header as=\"h2\" content=\"Oh No!\" />\n      <p style={paraStyles}>\n        {callMeDanger(\n          `It looks like you haven't uploaded any scans. Import one below to get started.`\n        )}\n      </p>\n      {children}\n    </>\n  );\n};\nEmptyScans.propTypes = {\n  children: PropTypes.node\n};\n\nexport default EmptyScans;\n","import React, { useEffect, useState } from 'react';\nimport { Header, Segment } from 'semantic-ui-react';\n\nimport { requester, API_SCANS } from 'utilities/apiUtils';\nimport Loader from 'shared/loading';\n\nimport RecentScans from 'components/scans/recentScans';\nimport ImportScan from 'components/scans/importScan';\nimport EmptyScans from 'components/scans/emptyScan';\n\nconst Scans = () => {\n  const [loading, updateLoading] = useState({\n    status: true,\n    text: 'Fetching Scans...'\n  });\n  const [scans, updateScans] = useState([]);\n  const [loaded, updateLoaded] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const url = API_SCANS;\n      const result = await requester({ url, method: 'GET' });\n      updateLoaded(true);\n      updateLoading({ status: false });\n      updateScans(result.scans);\n    };\n    const timer = setTimeout(() => fetchData(), 400);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, []);\n\n  const noScans = !scans.length && loaded;\n  const hasScans = scans.length > 0 && loaded;\n  return (\n    <>\n      <div className=\"header-section\" data-testid=\"single-scan\">\n        <Header content=\"Recent Scans\" as=\"h2\" />\n      </div>\n      <Loader\n        loading={loading.status}\n        loadingProps={{ size: 'huge', content: loading.text }}\n      >\n        <Segment secondary textAlign=\"center\" padded=\"very\">\n          {noScans && (\n            <EmptyScans>\n              <ImportScan updateLoading={updateLoading} />\n            </EmptyScans>\n          )}\n          {hasScans && <RecentScans scans={scans} />}\n        </Segment>\n        {hasScans && <ImportScan updateLoading={updateLoading} />}\n      </Loader>\n    </>\n  );\n};\n\nexport default Scans;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { Button, Confirm } from 'semantic-ui-react';\n\nimport { requester, afterSubmit, API_SCANS } from 'utilities/apiUtils';\n\nconst DeleteScan = ({ scan }) => {\n  const { id } = scan;\n  const [open, setOpen] = useState(false);\n  const deleteScan = async () => {\n    const url = `${API_SCANS}/${id}`;\n    const response = await requester({ url, method: 'DELETE' });\n    afterSubmit(response);\n  };\n  const showConfirm = () => setOpen(true);\n  const closeConfirm = () => setOpen(false);\n  return (\n    <>\n      <br />\n      <Button content=\"Delete Scan\" onClick={showConfirm} negative />\n      <Confirm\n        data-testid=\"test_show-confirm\"\n        header={`Delete scan from ${moment(scan.start_time * 1000).format(\n          'MMM D, YYYY'\n        )}`}\n        open={open}\n        onCancel={closeConfirm}\n        onConfirm={deleteScan}\n        size=\"mini\"\n        content=\"This action cannot be undone. Please confirm that you do want to delete this scan.\"\n        confirmButton={{\n          content: 'Delete Scan',\n          negative: true,\n          primary: false,\n          'data-testid': 'test_actually-delete'\n        }}\n      />\n    </>\n  );\n};\n\nDeleteScan.propTypes = {\n  scan: PropTypes.object\n};\n\nexport default DeleteScan;\n","/* eslint-disable prefer-const */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.scss';\n\nconst Truncate = props => {\n  let { content, children, className = '', style } = props;\n  if (children) content = children;\n  return (\n    <span\n      className={`${className} text--truncate`}\n      style={style}\n      title={content}\n    >\n      {content}\n    </span>\n  );\n};\n\nconst { node, string, object } = PropTypes;\nTruncate.propTypes = {\n  children: node,\n  content: node,\n  className: string,\n  style: object\n};\n\nexport default Truncate;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Flex extends Component {\n  transformBoolsToStrings = rest =>\n    Object.keys(rest).reduce(\n      (obj, key) => {\n        const object = { ...obj };\n        if (rest[key] === true) {\n          object.bools = [...obj.bools, `flex-parent__${key.toLowerCase()}`];\n        } else if (rest[key] !== false) {\n          object.props = [...obj.props, { [key]: rest[key] }];\n        }\n        return object;\n      },\n      { bools: [], props: [] }\n    );\n\n  flexChildren = (children, spacing) => {\n    return React.Children.map(children, child => {\n      if (child) {\n        const { className: kidClasses = '', flex, ...rest } = child.props;\n        let flexString = '';\n        if (flex) flexString = ` flex-child__${flex}`;\n        if (spacing) rest.style = { ...rest.style, padding: `0 ${spacing}px` };\n        const newKid = React.cloneElement(child, {\n          ...rest,\n          className: kidClasses + flexString\n        });\n        return newKid;\n      }\n      return null;\n    });\n  };\n\n  buildFlexClasses = (className = '', bools) => {\n    let classes = 'flex-parent';\n    if (bools.length) classes = bools.join(' ');\n    classes += ` ${className}`;\n    return classes;\n  };\n\n  render() {\n    const { className, children, as = 'div', spacing, ...rest } = this.props;\n    const filterProps = this.transformBoolsToStrings(rest);\n    const classes = this.buildFlexClasses(className, filterProps.bools);\n    if (spacing)\n      filterProps.props.style = {\n        ...filterProps.props.style,\n        margin: `0 -${spacing}px`\n      };\n    const modified = this.flexChildren(children, spacing);\n    return React.createElement(\n      as,\n      { ...filterProps.props, className: classes },\n      [modified]\n    );\n  }\n}\n\nconst { string, node, bool, object, oneOfType, number } = PropTypes;\nFlex.propTypes = {\n  className: string,\n  children: node,\n  as: string,\n  style: object,\n  column: bool,\n  wrap: bool,\n  centerboth: bool,\n  centermain: bool,\n  centercross: bool,\n  spacebetween: bool,\n  spacearound: bool,\n  flexend: bool,\n  spacing: oneOfType([string, number])\n};\n\nexport default Flex;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport Titler from 'shared/titler';\n\nconst formattedDate = value => {\n  return moment(value * 1000).format('HH:mm:ss');\n};\n\nconst parseArray = value => {\n  const data = JSON.parse(value);\n  if (Array.isArray(data) && !!data[0]) {\n    return data.join(';');\n  }\n  return '';\n};\n\nconst details = [\n  { title: 'Hostname', name: 'hostnames', formatter: parseArray },\n  { title: 'IP4 Address', name: 'ip4_addr' },\n  { title: 'Scan Start', name: 'starttime', formatter: formattedDate },\n  { title: 'Scan End', name: 'endtime', formatter: formattedDate }\n];\n\nconst HostDetails = ({ host }) => {\n  return (\n    <>\n      {details.map(({ title, name, formatter }) => {\n        let value = host[name];\n        if (formatter) value = formatter(value);\n        return <Titler key={name} title={title} value={value} bold linebreak />;\n      })}\n    </>\n  );\n};\n\nHostDetails.propTypes = {\n  host: PropTypes.object\n};\n\nexport default HostDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Titler from 'shared/titler';\n\nconst details = [\n  { title: 'Port Number', name: 'num' },\n  { title: 'Proto', name: 'proto' },\n  { title: 'Service', name: 'service_name' },\n  { title: 'Reason', name: 'reason' },\n  { title: 'State', name: 'state' }\n];\n\nconst Port = ({ port }) => {\n  return (\n    <div className={`port port--${port.state}`}>\n      {details.map(({ title, name }) => {\n        const value = port[name];\n        return <Titler key={name} title={title} value={value} bold linebreak />;\n      })}\n    </div>\n  );\n};\n\nPort.propTypes = {\n  port: PropTypes.object\n};\n\nexport default Port;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Header,\n  Card,\n  Accordion,\n  Icon,\n  Divider,\n  Button\n} from 'semantic-ui-react';\n\nimport { capitalize } from 'utilities';\n\nimport Truncate from 'shared/truncate';\nimport Titler from 'shared/titler';\nimport Flex from 'shared/flex';\n\nimport HostDetails from 'components/hosts/hostDetails';\nimport Port from 'components/hosts/port';\n\nconst Hosts = ({ hosts }) => {\n  const all = hosts.map(host => host.id);\n  const [hostIds, updateHosts] = useState([]);\n  const onClick = (e, obj) => {\n    updateHosts(prev => {\n      const id = obj['data-hostid'];\n      if (prev.includes(id)) {\n        return prev.filter(item => item !== id);\n      }\n      return [id, ...prev];\n    });\n  };\n\n  const showAll = () => updateHosts(all);\n  const collapseAll = () => updateHosts([]);\n\n  return (\n    <>\n      <Header content=\"Hosts\" as=\"h3\" />\n      <Button.Group size=\"small\" compact>\n        <Button content=\"Expand All\" onClick={showAll} />\n        <Button content=\"Collapse All\" onClick={collapseAll} />\n      </Button.Group>\n      <br />\n      <br />\n      <Accordion>\n        {hosts.map(host => {\n          const { hostnames } = host;\n          const parsedHostname = JSON.parse(hostnames);\n          let hostnameDisplay = host.ip4_addr;\n          if (Array.isArray(parsedHostname) && !!parsedHostname[0]) {\n            // eslint-disable-next-line prefer-destructuring\n            hostnameDisplay = parsedHostname[0];\n          }\n          const active = hostIds.includes(host.id);\n          return (\n            <Card key={host.id} fluid>\n              <Card.Content>\n                <Card.Header>\n                  <Accordion.Title\n                    active={active}\n                    onClick={onClick}\n                    data-hostid={host.id}\n                    data-testid=\"host-trigger\"\n                  >\n                    <Truncate>\n                      <Icon name=\"dropdown\" />\n                      {hostnameDisplay}\n                    </Truncate>\n                  </Accordion.Title>\n                </Card.Header>\n                <Card.Meta>\n                  <Titler\n                    title=\"Status\"\n                    value={capitalize(host.status)}\n                    bold\n                    linebreak\n                  />\n                  {active && <HostDetails host={host} />}\n                </Card.Meta>\n                {active && (\n                  <Card.Description>\n                    <Divider />\n                    <Header\n                      as=\"h4\"\n                      content=\"Ports\"\n                      data-testid={`host-details${host.id}`}\n                    />\n                    <Flex spacing=\"10\" wrap>\n                      {host.ports.map(port => (\n                        <div flex=\"25\" key={port.id} style={{ minWidth: 220 }}>\n                          <Port port={port} key={port.id} />\n                          <br />\n                        </div>\n                      ))}\n                    </Flex>\n                  </Card.Description>\n                )}\n              </Card.Content>\n            </Card>\n          );\n        })}\n      </Accordion>\n    </>\n  );\n};\n\nHosts.propTypes = {\n  hosts: PropTypes.array\n};\n\nexport default Hosts;\n","import React, { useState } from 'react';\nimport { Header, Icon, Segment } from 'semantic-ui-react';\n\nimport styles from 'stylesheets/variables.scss';\n\nimport { callMeDanger } from 'utilities';\n\nimport Loader from 'shared/loading';\n\nimport ImportScan from 'components/scans/importScan';\n\nconst NotFound = () => {\n  const [loading, updateLoading] = useState({\n    status: false\n  });\n  const paraStyles = {\n    maxWidth: 400,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    fontSize: 18\n  };\n  const iconStyles = { color: styles.darkgray };\n  return (\n    <>\n      <div className=\"header-section\">\n        <Header content=\"Page Not Found\" as=\"h2\" />\n      </div>\n      <Loader\n        loading={loading.status}\n        loadingProps={{ size: 'huge', content: loading.text }}\n      >\n        <Segment secondary textAlign=\"center\" padded=\"very\">\n          <Icon name=\"file alternate\" size=\"huge\" style={iconStyles} />\n          <Header as=\"h2\" content=\"Oh No!\" />\n          <p style={paraStyles}>\n            {callMeDanger(\n              `I couldn't find what you were looking for. But maybe you wanted\n               to upload a scan. Or <a href=\"/\">view your existing scans</a>.`\n            )}\n          </p>\n          <ImportScan updateLoading={updateLoading} />\n        </Segment>\n      </Loader>\n    </>\n  );\n};\n\nexport default NotFound;\n","import React, { useEffect, useState } from 'react';\nimport moment from 'moment';\nimport { useParams, Link } from 'react-router-dom';\nimport { Header } from 'semantic-ui-react';\n\nimport Titler from 'shared/titler';\nimport Loader from 'shared/loading';\n\nimport { requester, API_SCANS } from 'utilities/apiUtils';\n\nimport DeleteScan from 'components/scans/deleteScan';\nimport Hosts from 'components/hosts/hosts';\nimport NotFound from 'components/notFound';\n\nconst Scan = () => {\n  const { id } = useParams();\n  const [loading, updateLoading] = useState(true);\n  const [scan, updateScan] = useState();\n  const [loaded, updateLoaded] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      const url = `${API_SCANS}/${id}`;\n      const result = await requester({ url, method: 'GET' });\n      updateLoading({ status: false });\n      updateLoaded(true);\n      if (result instanceof Error) {\n        return;\n      }\n      updateScan(result);\n    };\n    const timer = setTimeout(() => fetchData(), 400);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [id]);\n  return (\n    <>\n      {!loaded ||\n        (scan && (\n          <Header as=\"h2\" content=\"Scan Results\" className=\"light-header\" />\n        ))}\n\n      <Loader\n        loading={loading.status}\n        loadingProps={{ size: 'huge', content: 'Populating Results...' }}\n      >\n        {loaded && !scan && <NotFound />}\n        {scan && (\n          <>\n            <div className=\"header-section\" data-testid=\"single-scan\">\n              <Header\n                content={moment(scan.start_time * 1000).format('MMM D, YYYY')}\n                as=\"h3\"\n              />\n              <Titler\n                title=\"Hosts Scanned\"\n                value={(scan.hosts_up + scan.hosts_down).toString()}\n                bold\n                linebreak\n              />\n              <Titler\n                title=\"Hosts Up\"\n                value={scan.hosts_up.toString()}\n                bold\n                linebreak\n              />\n              <Titler\n                title=\"Hosts Down\"\n                value={scan.hosts_down.toString()}\n                bold\n                linebreak\n              />\n            </div>\n            <br />\n            <Link to=\"/scans\" className=\"basic-link\">\n              Back to all scans\n            </Link>\n            <Hosts hosts={scan.hosts} />\n            <DeleteScan scan={scan} />\n            <br />\n            <br />\n            <Link to=\"/scans\" className=\"basic-link\">\n              Back to all scans\n            </Link>\n          </>\n        )}\n      </Loader>\n    </>\n  );\n};\n\nexport default Scan;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Scans from 'components/scans/scans';\nimport Scan from 'components/scans/scan';\nimport NotFound from 'components/notFound';\n\nconst Main = () => {\n  return (\n    <Switch>\n      <Route path=\"/\" exact>\n        <Scans />\n      </Route>\n      <Route path=\"/scans\" exact>\n        <Scans />\n      </Route>\n      <Route path=\"/scans/:id\" exact>\n        <Scan />\n      </Route>\n      <Route path=\"*\">\n        <NotFound />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './stylesheets/index.scss';\nimport Main from './components/main';\n\nReactDOM.render(\n  <Router>\n    <div className=\"width-wrapper\">\n      <Main />\n    </div>\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}